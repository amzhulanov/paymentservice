plugins {
    id 'org.springframework.boot' version '2.3.0.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'java'
    id 'com.google.protobuf' version '0.8.8'
    id 'io.franzbecker.gradle-lombok' version '1.14'
    //id "org.flywaydb.flyway" version "6.4.4"
}

springBoot {
    mainClassName = 'com.jam.example.paymentservice.PaymentServiceApp'
}

group = 'com.jam.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'


repositories {
    maven { // The google mirror is less flaky than mavenCentral()
        url "https://maven-central.storage-download.googleapis.com/repos/central/data/"
    }
    mavenCentral()
    mavenLocal()
}

lombok {
    version = '1.18.4'
    sha256 = ""
}

def grpcVersion = '1.30.0' // CURRENT_GRPC_VERSION
def protobufVersion = '3.12.0'
def protocVersion = protobufVersion

dependencies {

    runtimeOnly 'org.postgresql:postgresql'
    implementation 'net.devh:grpc-server-spring-boot-starter:2.7.0.RELEASE'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    implementation 'org.springframework.security:spring-security-config'
    implementation 'org.springframework.security:spring-security-oauth2-client'
    implementation 'org.springframework.security:spring-security-oauth2-resource-server'
    implementation 'org.springframework.security:spring-security-oauth2-jose'



    implementation "io.grpc:grpc-protobuf:${grpcVersion}"
    implementation "io.grpc:grpc-stub:${grpcVersion}"
    implementation "com.google.protobuf:protobuf-java-util:${protobufVersion}"
    runtimeOnly "io.grpc:grpc-netty-shaded:${grpcVersion}"

    testImplementation "io.grpc:grpc-testing:${grpcVersion}"
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }

    testCompile group: 'org.slf4j', name: 'slf4j-simple', version: '1.6.1'

    implementation group: 'org.projectlombok', name: 'lombok', version: '1.18.12'
//	compile group: 'org.flywaydb', name: 'flyway-core', version: '6.4.4'
    // https://mvnrepository.com/artifact/javax.validation/validation-api
    compile group: 'javax.validation', name: 'validation-api', version: '2.0.1.Final'

}

sourceSets {
    main {
//        proto {
//            srcDir 'src/main/java'
//        }
        java {
            // include self written and generated code
            //srcDirs 'src/main/java', 'generated-sources/main/java'
            srcDirs 'src/main/protoGen', 'generated-sources/main/java'
        }
    }
}

protobuf {
    protoc { artifact = "com.google.protobuf:protoc:${protocVersion}" }
    plugins {
        grpc { artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}" }
    }
    generateProtoTasks.generatedFilesBaseDir = 'generated-sources'
    //generateProtoTasks.generatedFilesBaseDir ='src.main.java.com.jam.example.paymentservice'
    //generateProtoTasks {task.}
    generateProtoTasks {

        ofSourceSet('main').each { task ->
            task.builtins {
                java {
                    outputSubDir = 'protoGen'
                }
            }
            task.plugins {
                grpc{
                    outputSubDir = 'protoGen'
                }
//                grpc {
//                    //outputSubDir = 'proto'
//                }
            }
//            task.builtins {
////                java {
////                    outputSubDir = 'src/main/java'//'proto'
////                }
//            }
        }
    }


//    generateProtoTasks {
//        // all() returns the collection of all protoc tasks
//        all().each { task ->
//            // Here you can configure the task
//        }
//        // In addition to all(), you may get the task collection by various
//        // criteria:
//
//        // (Java only) returns tasks for a sourceSet
//        ofSourceSet('main')
//
////        task.plugins {
////            grpc {
////                outputSubDir = 'protoGen'
////            }
////        }
//    }

//    generatedFilesBaseDir = "$projectDir/src"
}


//sourceSets {
//    main {
//        java {
//            srcDir 'src/main/protoGen'
//        }
//    }
//}



//task cleanProtoGen {
//    doFirst {
//        delete("$projectDir/src/main/protoGen")
//    }
//}


test {
    useJUnitPlatform()
}

wrapper {
    gradleVersion = "6.5"
}

//flyway {
//	url = 'jdbc:postgresql://localhost:5432/paymentSRV?currentSchema=paymentSRV&autoReconnect=true'
//	user = 'payment'
//	password = 'paymentpassword'
//	schemas = ['paymentsrv', 'schema2', 'schema3']
//	placeholders = [
//			'keyABC': 'valueXYZ',
//			'otherplaceholder': 'value123'
//	]
//}

// we need to build classes before we can migrate
//flywayMigrate.dependsOn classes


